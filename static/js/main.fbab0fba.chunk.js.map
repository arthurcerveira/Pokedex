{"version":3,"sources":["components/layout/NavBar.js","components/pokemon/PokemonCard.js","components/pokemon/PokemonList.js","components/layout/Dashboard.js","typeColors.js","components/pokemon/Pokemon.js","App.js","serviceWorker.js","index.js"],"names":["StyledLink","styled","Link","NavBar","className","to","Component","Sprite","img","Card","div","PokemonCard","state","name","imageUrl","apiIndex","pokemonIndex","imageLoading","length","index","this","props","url","split","getImageUrl","getPokemonIndex","setState","onLoad","src","style","display","PokemonList","pokemon","axios","get","res","data","Fragment","map","key","class","justifyContent","Dashboard","TYPE_COLORS","bug","dark","dragon","electric","fairy","fighting","fire","flying","ghost","grass","ground","ice","normal","poison","psychic","rock","steel","water","Pokemon","pokemonUrl","types","description","stats","hp","attack","defense","speed","spAttack","spDefense","height","weight","eggGroups","catchRate","abilities","genderRatioMale","genderRatioFemale","evs","hatchSteps","themeColor","femaleRate","specialAttack","specialDefense","stat","match","params","pokemonSpeciesUrl","pokemonRes","sprites","front_default","getStats","type","ability","filter","effort","join","then","flavor_text_entries","some","flavor","language","flavor_text","getGenderRatio","Math","round","group","pokemonIndexLenghtFix","color","console","log","role","width","backgroundColor","aria-valuenow","aria-valuemin","aria-valuemax","attribute","measure","getStatBar","getPokemonAttribute","getGenderRatioBar","href","target","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2hBAIA,IAAMA,EAAaC,YAAOC,IAAPD,CAAH,KA6BDE,E,iLAdX,OACE,6BACE,yBAAKC,UAAU,yDACb,kBAACJ,EAAD,CAAYK,GAAG,KACb,uBAAGD,UAAU,0DAAb,kB,GANSE,a,wxBCbrB,IAAMC,EAASN,IAAOO,IAAV,KAMNC,EAAOR,IAAOS,IAAV,KAYJV,EAAaC,YAAOC,IAAPD,CAAH,KA6EDU,E,2MA/DbC,MAAQ,CACNC,KAAM,GACNC,SAAU,GACVC,SAAU,GACVC,aAAc,GACdC,cAAc,G,+EAGAF,GAGd,IAFA,IAAIC,EAAeD,EAEZC,EAAaE,OAAS,GAAGF,EAAoB,IAAMA,EAE1D,OAAOA,I,kCAGGG,GACV,MAAM,4EAAN,OAAmFA,EAAnF,U,0CAGmB,IAAD,EACIC,KAAKC,MAAnBR,EADU,EACVA,KACFE,EAFY,EACJO,IACOC,MAAM,KAAK,GAC1BT,EAAWM,KAAKI,YAAYT,GAC5BC,EAAeI,KAAKK,gBAAgBV,GAE1CK,KAAKM,SAAS,CACZb,OACAC,WACAE,eACAD,e,+BAIM,IAAD,OACP,OACE,yBAAKX,UAAU,0BACb,kBAAC,EAAD,CAAYC,GAAE,kBAAae,KAAKR,MAAMG,WACpC,kBAACN,EAAD,CAAML,UAAU,QACd,wBAAIA,UAAU,+BACZ,2BAAIgB,KAAKR,MAAMI,aAAe,KAC7BI,KAAKR,MAAMC,MAGd,yBAAKT,UAAU,qBACb,kBAACG,EAAD,CACEH,UAAU,qCACVuB,OAAQ,kBAAM,EAAKD,SAAS,CAAET,cAAc,KAC5CW,IAAKR,KAAKR,MAAME,SAChBe,MAAOT,KAAKR,MAAMK,aAAe,KAAO,CAAEa,QAAS,YAItDV,KAAKR,MAAMK,aACV,yBAAKb,UAAU,mCACb,Y,GAxDUE,aCiBXyB,E,2MA9CbnB,MAAQ,CACNU,IAAK,+CACLU,QAAS,M,qLAISC,IAAMC,IAAId,KAAKR,MAAMU,M,OAAjCa,E,OACNf,KAAKM,SAAS,CAAEM,QAASG,EAAIC,KAAJ,U,gFAIzB,OACE,kBAAC,IAAMC,SAAP,KACGjB,KAAKR,MAAMoB,QACV,yBAAK5B,UAAU,OACZgB,KAAKR,MAAMoB,QAAQM,KAAI,SAAAN,GAAO,OAC7B,kBAAC,EAAD,CACEO,IAAKP,EAAQnB,KACbA,KAAMmB,EAAQnB,KACdS,IAAKU,EAAQV,UAKnB,yBAAKkB,MAAM,WACT,wBACEX,MAAO,CACLC,QAAS,OACTW,eAAgB,WAHpB,mBAQA,yBACErC,UAAU,yBACVyB,MAAO,CACLC,QAAS,gB,GArCCxB,aCUXoC,E,iLAVX,OACE,yBAAKtC,UAAU,OACb,yBAAKA,UAAU,OACb,kBAAC,EAAD,Y,GALcE,aCkBTqC,EArBK,CAClBC,IAAK,SACLC,KAAM,SACNC,OAAQ,SACRC,SAAU,SACVC,MAAO,SACPC,SAAU,UACVC,KAAM,SACNC,OAAQ,SACRC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRC,IAAK,SACLC,OAAQ,SACRC,OAAQ,SACRC,QAAS,SACTC,KAAM,SACNC,MAAO,SACPC,MAAO,UC0TMC,E,2MAtUblD,MAAQ,CACNC,KAAM,GACNG,aAAc,GACd+C,WAAY,GACZC,MAAO,GACPC,YAAa,GACbC,MAAO,CACLC,GAAI,GACJC,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,SAAU,GACVC,UAAW,IAEbC,OAAQ,GACRC,OAAQ,GACRC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,gBAAiB,GACjBC,kBAAmB,GACnBC,IAAK,GACLC,WAAY,GACZC,WAAY,W,8EAGCC,GAIb,MAAO,CACLJ,kBAJwB,KAAOI,EAK/BL,gBAJsB,MAAQ,EAAIK,M,8CASpC,KAAO/D,KAAKR,MAAMI,aAAaE,OAAS,GACtCE,KAAKM,SAAS,CAAEV,aAAmB,IAAMI,KAAKR,MAAMI,iB,+BAG/CkD,GAAQ,IACTC,EAA8D,GAA9DA,GAAIC,EAA0D,GAA1DA,OAAQC,EAAkD,GAAlDA,QAASC,EAAyC,GAAzCA,MAAOc,EAAkC,GAAlCA,cAAeC,EAAmB,GAAnBA,eA2BjD,OAzBAnB,EAAM5B,KAAI,SAAAgD,GACR,OAAQA,EAAKA,KAAKzE,MAChB,IAAK,KACHsD,EAAKmB,EAAI,UACT,MACF,IAAK,SACHlB,EAASkB,EAAI,UACb,MACF,IAAK,UACHjB,EAAUiB,EAAI,UACd,MACF,IAAK,QACHhB,EAAQgB,EAAI,UACZ,MACF,IAAK,iBACHF,EAAgBE,EAAI,UACpB,MACF,IAAK,kBACHD,EAAiBC,EAAI,cAOpB,CAAEnB,KAAIC,SAAQC,UAASC,QAAOc,gBAAeC,oB,kKAI9CrE,EAAiBI,KAAKC,MAAMkE,MAAMC,OAAlCxE,aAEA+C,E,4CAAkD/C,GAClDyE,E,oDAAiEzE,G,mBAE9CiB,IAAMC,IAAI6B,I,cAA7B2B,E,OACA7E,EAAO6E,EAAWtD,KAAKvB,KAEvBC,EAAW4E,EAAWtD,KAAKuD,QAAQC,c,EASrCxE,KAAKyE,SAASH,EAAWtD,KAAK8B,OANhCC,E,EAAAA,GACAC,E,EAAAA,OACAC,E,EAAAA,QACAC,E,EAAAA,MACAc,E,EAAAA,cACAC,E,EAAAA,eAIIZ,EAASiB,EAAWtD,KAAKqC,OAAS,GAElCC,EAASgB,EAAWtD,KAAKsC,OAAS,GAElCV,EAAQ0B,EAAWtD,KAAK4B,MAAM1B,KAAI,SAAAwD,GAAI,OAAIA,EAAKA,KAAKjF,QACpDgE,EAAYa,EAAWtD,KAAKyC,UAAUvC,KAC1C,SAAAyD,GAAO,OAAIA,EAAQA,QAAQlF,QAGvBmE,EAAMU,EAAWtD,KAAK8B,MACzB8B,QAAO,SAAAV,GACN,OAAOA,EAAKW,UAEb3D,KAAI,SAAAgD,GACH,MAAM,GAAN,OAAUA,EAAKW,OAAf,YAAyBX,EAAKA,KAAKzE,SAEpCqF,KAAK,M,oBAEFjE,IAAMC,IAAIuD,GAAmBU,MAAK,SAAAhE,GACtC,IAAI8B,EAAc,GAClB9B,EAAIC,KAAKgE,oBAAoBC,MAAK,SAAAC,GACH,OAAzBA,EAAOC,SAAS1F,OAClBoD,EAAcqC,EAAOE,gBAKzB,IAAMrB,EAAahD,EAAIC,KAAJ,YAT0B,EAUE,EAAKqE,eAClDtB,GADMJ,EAVqC,EAUrCA,kBAAmBD,EAVkB,EAUlBA,gBAIrBF,EAAY8B,KAAKC,MAAO,IAAM,IAAOxE,EAAIC,KAAJ,cACrCuC,EAAYxC,EAAIC,KAAJ,WAAuBE,KAAI,SAAAsE,GAAK,OAAIA,EAAM/F,QACtDoE,EAAa,KAAO9C,EAAIC,KAAJ,cAA4B,GAChD8C,EAAa/C,EAAIC,KAAJ,WAEnB,EAAKV,SAAS,CACZuC,cACAc,oBACAD,kBACAF,YACAD,YACAM,aACAC,mB,QAIJ9D,KAAKM,SAAS,CACZZ,WACAE,eACAH,OACAmD,QACAE,MAAO,CACLC,KACAC,SACAC,UACAC,QACAc,gBACAC,kBAEFZ,SACAC,SACAG,YACAG,QAGF5D,KAAKyF,wB,mFAGIvB,GACT,IAAMwB,EACqB,SAAzB1F,KAAKR,MAAMsE,WAAwB9D,KAAKR,MAAMsE,WAAa,UAG7D,OAFA6B,QAAQC,IAAIF,GAGV,yBAAK1G,UAAU,0BACb,yBAAKA,UAAS,mCAAsCkF,GACpD,yBAAKlF,UAAS,mBACZ,yBAAKA,UAAU,YACb,yBACEA,UAAU,gBACV6G,KAAK,cACLpF,MAAO,CACLqF,MAAM,GAAD,OAAK9F,KAAKR,MAAMsD,MAAMoB,GAAtB,KACL6B,gBAAgB,GAAD,OAAKL,IAEtBM,gBAAc,KACdC,gBAAc,IACdC,gBAAc,OAEd,+BAAQlG,KAAKR,MAAMsD,MAAMoB,U,0CAQjBiC,GAA0B,IAAfC,EAAc,uDAAJ,GACvC,OACE,yBAAKpH,UAAU,OACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,+BAAd,UAAgDmH,EAAhD,OAEF,yBAAKnH,UAAU,YACb,wBAAIA,UAAU,8BAAd,UAA+CgB,KAAKR,MAAM2G,GAA1D,YAAwEC,Q,0CAO9E,OACE,yBAAKpH,UAAU,OACb,yBAAKA,UAAU,YACb,wBAAIA,UAAU,eAAd,kBAEF,yBAAKA,UAAU,YACb,yBAAKA,UAAU,YACb,yBACEA,UAAU,eACV6G,KAAK,cACLpF,MAAO,CACLqF,MAAM,GAAD,OAAK9F,KAAKR,MAAMmE,kBAAhB,KACLoC,gBAAiB,QAEnBC,gBAAc,KACdC,gBAAc,IACdC,gBAAc,OAEd,+BAAQlG,KAAKR,MAAMmE,oBAErB,yBACE3E,UAAU,eACV6G,KAAK,cACLpF,MAAO,CACLqF,MAAM,GAAD,OAAK9F,KAAKR,MAAMkE,gBAAhB,KACLqC,gBAAiB,QAEnBC,gBAAc,KACdC,gBAAc,IACdC,gBAAc,OAEd,+BAAQlG,KAAKR,MAAMkE,uB,+BAS7B,OACE,yBAAK1E,UAAU,OACb,yBAAKA,UAAU,QACb,yBAAKA,UAAU,eACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,SACb,4BACE,2BAAIgB,KAAKR,MAAMI,gBAGnB,yBAAKZ,UAAU,SACb,yBAAKA,UAAU,eACZgB,KAAKR,MAAMoD,MAAM1B,KAAI,SAAAwD,GAAI,OACxB,0BACEvD,IAAKuD,EACL1F,UAAU,sDACVyB,MAAO,CACLsF,gBAAgB,IAAD,OAAMxE,EAAYmD,IACjCgB,MAAO,UAGRhB,UAOb,yBAAK1F,UAAU,aACb,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,YACb,yBACEwB,IAAKR,KAAKR,MAAME,SAChBV,UAAU,uCAGd,yBAAKA,UAAU,YACb,wBAAIA,UAAU,2BAA2BgB,KAAKR,MAAMC,MACnDO,KAAKqG,WAAW,MAChBrG,KAAKqG,WAAW,UAChBrG,KAAKqG,WAAW,WAChBrG,KAAKqG,WAAW,SAChBrG,KAAKqG,WAAW,iBAChBrG,KAAKqG,WAAW,oBAGrB,yBAAKrH,UAAU,YACb,yBAAKA,UAAU,YAAYgB,KAAKR,MAAMqD,eAG1C,6BACA,yBAAK7D,UAAU,aACb,wBAAIA,UAAU,0BAAd,WACA,yBAAKA,UAAU,OACb,yBAAKA,UAAU,YACZgB,KAAKsG,oBAAoB,SAAU,KACnCtG,KAAKsG,oBAAoB,SAAU,MACnCtG,KAAKsG,oBAAoB,YAAa,KACtCtG,KAAKuG,qBAER,yBAAKvH,UAAU,YACZgB,KAAKsG,oBAAoB,aACzBtG,KAAKsG,oBAAoB,cACzBtG,KAAKsG,oBAAoB,OACzBtG,KAAKsG,oBAAoB,gBAIhC,yBAAKtH,UAAU,sCAAf,YACY,IACV,uBAAGwH,KAAK,sBAAsBC,OAAO,SAASzH,UAAU,aAAxD,qB,GA7TUE,aCqBPwH,MAhBf,WACE,OACE,kBAAC,IAAD,KACE,yBAAK1H,UAAU,OACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,aACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO2H,OAAK,EAACC,KAAK,IAAIC,UAAWvF,IACjC,kBAAC,IAAD,CAAOqF,OAAK,EAACC,KAAK,yBAAyBC,UAAWnE,SCN9CoE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9C,MACvB,2DCZN+C,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzC,MAAK,SAAA0C,GACjCA,EAAaC,kB","file":"static/js/main.fbab0fba.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  &:focus,\n  &:hover,\n  &:link,\n  &:visited,\n  &:active {\n    text-decoration: none;\n    color: black;\n  }\n`;\n\nclass NavBar extends Component {\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\">\n          <StyledLink to=\"/\">\n            <a className=\"navbar-brand col-sn-5 col-md-2 mr-0 align-items-center\">\n              Pokedex\n            </a>\n          </StyledLink>\n        </nav>\n      </div>\n    );\n  }\n}\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nconst Sprite = styled.img`\n  width: 5em;\n  height: 5em;\n  display: none;\n`;\n\nconst Card = styled.div`\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);\n  &:hover {\n    box-shadow: 0 7px 10px rgba(0, 0, 0, 0.25), 0 5px 5px rgba(0, 0, 0, 0.21);\n  }\n  -moz-user-select: none;\n  -website-user-select: none;\n  user-select: none;\n  -o-user-select: none;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: black;\n  &:focus,\n  &:hover,\n  &:link,\n  &:visited,\n  &:active {\n    text-decoration: none;\n    color: black;\n  }\n`;\n\nclass PokemonCard extends Component {\n  state = {\n    name: \"\",\n    imageUrl: \"\",\n    apiIndex: \"\",\n    pokemonIndex: \"\",\n    imageLoading: true\n  };\n\n  getPokemonIndex(apiIndex) {\n    let pokemonIndex = apiIndex;\n\n    while (pokemonIndex.length < 3) pokemonIndex = \"\" + \"0\" + pokemonIndex;\n\n    return pokemonIndex;\n  }\n\n  getImageUrl(index) {\n    return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${index}.png`;\n  }\n\n  componentDidMount() {\n    const { name, url } = this.props;\n    const apiIndex = url.split(\"/\")[6];\n    const imageUrl = this.getImageUrl(apiIndex);\n    const pokemonIndex = this.getPokemonIndex(apiIndex);\n\n    this.setState({\n      name,\n      imageUrl,\n      pokemonIndex,\n      apiIndex\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"col-md-3 col-sm-6 mb-5\">\n        <StyledLink to={`pokemon/${this.state.apiIndex}`}>\n          <Card className=\"card\">\n            <h5 className=\"card-header text-capitalize\">\n              <b>{this.state.pokemonIndex + \" \"}</b>\n              {this.state.name}\n            </h5>\n\n            <div className=\"card-body mx-auto\">\n              <Sprite\n                className=\"card-img-top rounded mx-auto mt-2 \"\n                onLoad={() => this.setState({ imageLoading: false })}\n                src={this.state.imageUrl}\n                style={this.state.imageLoading ? null : { display: \"block\" }}\n              ></Sprite>\n            </div>\n\n            {this.state.imageLoading ? (\n              <div className=\"spinner-border mx-auto spinner\"></div>\n            ) : null}\n          </Card>\n        </StyledLink>\n      </div>\n    );\n  }\n}\n\nexport default PokemonCard;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport PokemonCard from \"./PokemonCard\";\n\nclass PokemonList extends Component {\n  state = {\n    url: \"https://pokeapi.co/api/v2/pokemon/?limit=151\",\n    pokemon: null\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(this.state.url);\n    this.setState({ pokemon: res.data[\"results\"] });\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        {this.state.pokemon ? (\n          <div className=\"row\">\n            {this.state.pokemon.map(pokemon => (\n              <PokemonCard\n                key={pokemon.name}\n                name={pokemon.name}\n                url={pokemon.url}\n              />\n            ))}\n          </div>\n        ) : (\n          <div class=\"loading\">\n            <h1\n              style={{\n                display: \"flex\",\n                justifyContent: \"center\"\n              }}\n            >\n              Loading Pokemon\n            </h1>\n            <div\n              className=\"spinner-border mx-auto\"\n              style={{\n                display: \"flex\"\n              }}\n            ></div>\n          </div>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default PokemonList;\n","import React, { Component } from \"react\";\nimport PokemonList from \"../pokemon/PokemonList\";\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div className=\"row\">\n        <div className=\"col\">\n          <PokemonList />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","const TYPE_COLORS = {\n  bug: \"B1C12E\",\n  dark: \"4F3A2D\",\n  dragon: \"755EDF\",\n  electric: \"FCBC17\",\n  fairy: \"F4B1F4\",\n  fighting: \"823551D\",\n  fire: \"E73B0C\",\n  flying: \"A3B3F7\",\n  ghost: \"6060B2\",\n  grass: \"74C236\",\n  ground: \"D3B357\",\n  ice: \"A3E7FD\",\n  normal: \"C8C4BC\",\n  poison: \"934594\",\n  psychic: \"ED4882\",\n  rock: \"B9A156\",\n  steel: \"B5B5C3\",\n  water: \"3295F6\"\n};\n\nexport default TYPE_COLORS;\n","import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nimport TYPE_COLORS from \"../../typeColors\";\n\nclass Pokemon extends Component {\n  state = {\n    name: \"\",\n    pokemonIndex: \"\",\n    pokemonUrl: \"\",\n    types: [],\n    description: \"\",\n    stats: {\n      hp: \"\",\n      attack: \"\",\n      defense: \"\",\n      speed: \"\",\n      spAttack: \"\",\n      spDefense: \"\"\n    },\n    height: \"\",\n    weight: \"\",\n    eggGroups: \"\",\n    catchRate: \"\",\n    abilities: \"\",\n    genderRatioMale: \"\",\n    genderRatioFemale: \"\",\n    evs: \"\",\n    hatchSteps: \"\",\n    themeColor: \"#EF5350\"\n  };\n\n  getGenderRatio(femaleRate) {\n    const genderRatioFemale = 12.5 * femaleRate;\n    const genderRatioMale = 12.5 * (8 - femaleRate);\n\n    return {\n      genderRatioFemale: genderRatioFemale,\n      genderRatioMale: genderRatioMale\n    };\n  }\n\n  pokemonIndexLenghtFix() {\n    while (this.state.pokemonIndex.length < 3)\n      this.setState({ pokemonIndex: \"\" + \"0\" + this.state.pokemonIndex });\n  }\n\n  getStats(stats) {\n    let { hp, attack, defense, speed, specialAttack, specialDefense } = \"\";\n\n    stats.map(stat => {\n      switch (stat.stat.name) {\n        case \"hp\":\n          hp = stat[\"base_stat\"];\n          break;\n        case \"attack\":\n          attack = stat[\"base_stat\"];\n          break;\n        case \"defense\":\n          defense = stat[\"base_stat\"];\n          break;\n        case \"speed\":\n          speed = stat[\"base_stat\"];\n          break;\n        case \"special-attack\":\n          specialAttack = stat[\"base_stat\"];\n          break;\n        case \"special-defense\":\n          specialDefense = stat[\"base_stat\"];\n          break;\n        default:\n          break;\n      }\n    });\n\n    return { hp, attack, defense, speed, specialAttack, specialDefense };\n  }\n\n  async componentDidMount() {\n    let { pokemonIndex } = this.props.match.params;\n\n    const pokemonUrl = `https://pokeapi.co/api/v2/pokemon/${pokemonIndex}`;\n    const pokemonSpeciesUrl = `https://pokeapi.co/api/v2/pokemon-species/${pokemonIndex}`;\n\n    const pokemonRes = await axios.get(pokemonUrl);\n    const name = pokemonRes.data.name;\n\n    const imageUrl = pokemonRes.data.sprites.front_default;\n\n    const {\n      hp,\n      attack,\n      defense,\n      speed,\n      specialAttack,\n      specialDefense\n    } = this.getStats(pokemonRes.data.stats);\n\n    // Convert height from decimeters to meters\n    const height = pokemonRes.data.height / 10;\n    // Convert weight from hectograms to kilograms\n    const weight = pokemonRes.data.weight / 10;\n\n    const types = pokemonRes.data.types.map(type => type.type.name);\n    const abilities = pokemonRes.data.abilities.map(\n      ability => ability.ability.name\n    );\n\n    const evs = pokemonRes.data.stats\n      .filter(stat => {\n        return stat.effort;\n      })\n      .map(stat => {\n        return `${stat.effort} ${stat.stat.name}`;\n      })\n      .join(\", \");\n\n    await axios.get(pokemonSpeciesUrl).then(res => {\n      let description = \"\";\n      res.data.flavor_text_entries.some(flavor => {\n        if (flavor.language.name === \"en\") {\n          description = flavor.flavor_text;\n          return;\n        }\n      });\n\n      const femaleRate = res.data[\"gender_rate\"];\n      const { genderRatioFemale, genderRatioMale } = this.getGenderRatio(\n        femaleRate\n      );\n\n      const catchRate = Math.round((100 / 255) * res.data[\"capture_rate\"]);\n      const eggGroups = res.data[\"egg_groups\"].map(group => group.name);\n      const hatchSteps = 255 * (res.data[\"hatch_counter\"] + 1);\n      const themeColor = res.data[\"color\"][\"name\"];\n\n      this.setState({\n        description,\n        genderRatioFemale,\n        genderRatioMale,\n        catchRate,\n        eggGroups,\n        hatchSteps,\n        themeColor\n      });\n    });\n\n    this.setState({\n      imageUrl,\n      pokemonIndex,\n      name,\n      types,\n      stats: {\n        hp,\n        attack,\n        defense,\n        speed,\n        specialAttack,\n        specialDefense\n      },\n      height,\n      weight,\n      abilities,\n      evs\n    });\n\n    this.pokemonIndexLenghtFix();\n  }\n\n  getStatBar(stat) {\n    const color =\n      this.state.themeColor != \"white\" ? this.state.themeColor : \"#EF5350\";\n    console.log(color);\n\n    return (\n      <div className=\"row align-items-center\">\n        <div className={`col-12 col-md-3 text-capitalize`}>{stat}</div>\n        <div className={`col-12 col-md-9`}>\n          <div className=\"progress\">\n            <div\n              className=\"progress-bar \"\n              role=\"progressbar\"\n              style={{\n                width: `${this.state.stats[stat]}%`,\n                backgroundColor: `${color}`\n              }}\n              aria-valuenow=\"25\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            >\n              <small>{this.state.stats[stat]}</small>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  getPokemonAttribute(attribute, measure = \"\") {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <h6 className=\"float-right text-capitalize\">{`${attribute}:`}</h6>\n        </div>\n        <div className=\"col-md-6\">\n          <h6 className=\"float-left text-capitalize\">{`${this.state[attribute]} ${measure}`}</h6>\n        </div>\n      </div>\n    );\n  }\n\n  getGenderRatioBar() {\n    return (\n      <div className=\"row\">\n        <div className=\"col-md-6\">\n          <h6 className=\"float-right\">Gender Ratio:</h6>\n        </div>\n        <div className=\"col-md-6\">\n          <div className=\"progress\">\n            <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              style={{\n                width: `${this.state.genderRatioFemale}%`,\n                backgroundColor: \"pink\"\n              }}\n              aria-valuenow=\"15\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            >\n              <small>{this.state.genderRatioFemale}</small>\n            </div>\n            <div\n              className=\"progress-bar\"\n              role=\"progressbar\"\n              style={{\n                width: `${this.state.genderRatioMale}%`,\n                backgroundColor: \"blue\"\n              }}\n              aria-valuenow=\"30\"\n              aria-valuemin=\"0\"\n              aria-valuemax=\"100\"\n            >\n              <small>{this.state.genderRatioMale}</small>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"col\">\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <div className=\"row\">\n              <div className=\"col-5\">\n                <h5>\n                  <b>{this.state.pokemonIndex}</b>\n                </h5>\n              </div>\n              <div className=\"col-7\">\n                <div className=\"float-right\">\n                  {this.state.types.map(type => (\n                    <span\n                      key={type}\n                      className=\"badge badge-primary badge-pill mr-1 text-capitalize\"\n                      style={{\n                        backgroundColor: `#${TYPE_COLORS[type]}`,\n                        color: \"white\"\n                      }}\n                    >\n                      {type}\n                    </span>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"row align-items-center\">\n              <div className=\"col-md-3\">\n                <img\n                  src={this.state.imageUrl}\n                  className=\"card-img-top rounded mx-auto mt-2\"\n                />\n              </div>\n              <div className=\"col-md-9\">\n                <h4 className=\"mx-auto text-capitalize\">{this.state.name}</h4>\n                {this.getStatBar(\"hp\")}\n                {this.getStatBar(\"attack\")}\n                {this.getStatBar(\"defense\")}\n                {this.getStatBar(\"speed\")}\n                {this.getStatBar(\"specialAttack\")}\n                {this.getStatBar(\"specialDefense\")}\n              </div>\n            </div>\n            <div className=\"row mt-1\">\n              <div className=\"p-2 mr-2\">{this.state.description}</div>\n            </div>\n          </div>\n          <hr />\n          <div className=\"card-body\">\n            <h5 className=\"card-title text-center\">Profile</h5>\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                {this.getPokemonAttribute(\"height\", \"m\")}\n                {this.getPokemonAttribute(\"weight\", \"kg\")}\n                {this.getPokemonAttribute(\"catchRate\", \"%\")}\n                {this.getGenderRatioBar()}\n              </div>\n              <div className=\"col-md-6\">\n                {this.getPokemonAttribute(\"eggGroups\")}\n                {this.getPokemonAttribute(\"hatchSteps\")}\n                {this.getPokemonAttribute(\"evs\")}\n                {this.getPokemonAttribute(\"abilities\")}\n              </div>\n            </div>\n          </div>\n          <div className=\"card-footer text-muted text-center\">\n            Data from{\" \"}\n            <a href=\"https://pokeapi.co/\" target=\"_blank\" className=\"card-link\">\n              Pokeapi.co\n            </a>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pokemon;\n","import React, { Component } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\nimport NavBar from \"./components/layout/NavBar\";\nimport Dashboard from \"./components/layout/Dashboard\";\nimport Pokemon from \"./components/pokemon/Pokemon\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <NavBar />\n        <div className=\"container\">\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route exact path=\"/pokemon/:pokemonIndex\" component={Pokemon} />\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}